AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for CloudComputing project

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    MemorySize: 128
  Api:
      Cors:
        AllowHeaders: "'*'"
        AllowMethods: "'*'"
        AllowOrigin: "'*'"

Resources:
  RegistrationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: registration/
      Handler: app.registration_lambda
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        Registration:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /api/registration
            Method: post
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: login/
      Handler: app.login_lambda
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            Path: /api/login
            Method: post
  ChangeAvatarFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: change_avatar/
      Handler: app.change_avatar_lambda
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            Path: /api/changeAvatar/{username}
            Method: put
  UploadFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: upload_file/
      Handler: app.upload_file_lambda
      Runtime: python3.8
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            Path: /api/upload
            Method: post
<<<<<<< Updated upstream

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  RegistrationApi:
    Description: "API Gateway endpoint URL for Prod stage for Registration function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/registration/"
  RegistrationFunction:
    Description: "Registration Lambda Function ARN"
    Value: !GetAtt RegistrationFunction.Arn
  RegistrationFunctionIamRole:
    Description: "Implicit IAM Role created for RegistrationFunction"
    Value: !GetAtt RegistrationFunction.Arn
=======
            ApiId: !Ref ApiGatewayApi
            Auth:
              Authorizer: UsersCognitoAuthorizer
  GetUserDetailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user_details/
      Handler: app.user_details
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonCognitoReadOnly
        - AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGateway:
          Type: HttpApi
          Properties:
            Path: /api/user
            Method: get
            ApiId: !Ref ApiGatewayApi
            Auth:
              Authorizer: UsersCognitoAuthorizer
  NewAlbumFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: new_album/
      Handler: app.new_album
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonCognitoReadOnly
        - AmazonDynamoDBFullAccess
      Events:
        ApiGateway:
          Type: HttpApi
          Properties:
            Path: /api/newAlbum
            Method: get
            ApiId: !Ref ApiGatewayApi
            Auth:
              Authorizer: UsersCognitoAuthorizer
>>>>>>> Stashed changes
